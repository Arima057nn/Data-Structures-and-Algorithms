#include <stdio.h>
#include <stdlib.h>
#include <string.h>

typedef int element;
typedef struct Node{
  element data;
  struct Node *next;
} node;

typedef struct{
  node *Front,*Rear;
} Queue;

node *makeNewNode(element e){
  node *new = (node*)malloc(sizeof(node));
  new->next = NULL;
  new->data = e;
  return new;
}

void makeNullQueue(Queue *Q){
  node *head;
  head = (node*)malloc(sizeof(node));
  head->next = NULL;
  (*Q)->Front = head;
  (*Q)->Rear = head;
}

int isEmpty(Queue *Q){
  return Q.Front == Q.Rear;
}

void EnQueue(element e, Queue *Q){
  Q->Rear = Q->Rear->next;
  Q->Rear->data = e;
  Q->Rear->next = NULL;
}

element DeQueue(Queue *Q){
  node *tmp;
  element A;
  if(!isEmpty(*Q)){
    A = Q->Front->data;
    tmp = Q->Front;
    Q->Front = Q->Front->next;
    free(tmp);
    return A;
    
  }else printf("Queue is empty");
}

int main(){
  Queue A;
  makeNullQueue(&A);
  int X[6] = {1,2,3,4,5,6};
  int i;
  for(i = 0;i<6;i++){
    EnQueue(X[i],&A);
  }
  while(!isEmpty(A)){
    printf("%d\t",DeQueue(&A));
  }
  return 0;
}
